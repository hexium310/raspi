services:
  prometheus:
    image: prom/prometheus:v3.5.0
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-admin-api
    configs:
      - source: prometheus
        target: /etc/prometheus/prometheus.yml
    volumes:
      - type: volume
        source: prometheus
        target: /prometheus
    extra_hosts:
      host.docker.internal: host-gateway
    networks:
      - default
      - proxy
    deploy:
      labels:
        traefik.enable: "true"
        traefik.docker.network: proxy
        traefik.http.routers.prometheus.entrypoints: websecure
        traefik.http.routers.prometheus.rule: Host(`prometheus.raspi.internal`)
        traefik.http.services.prometheus.loadbalancer.server.port: "9090"

  cadvisor:
    image: ghcr.io/google/cadvisor:v0.53.0
    command:
      - --docker_only
      - --housekeeping_interval=60s
    volumes:
      - type: bind
        source: /
        target: /rootfs
        read_only: true
      - type: bind
        source: /var/run
        target: /var/run
        read_only: true
      - type: bind
        source: /sys
        target: /sys
        read_only: true
      - type: bind
        source: /var/lib/docker/
        target: /var/lib/docker
        read_only: true
      - type: bind
        source: /dev/disk/
        target: /dev/disk
        read_only: true

  snmp_exporter:
    image: prom/snmp-exporter

  grafana:
    image: grafana/grafana:12.1.0
    environment:
      GF_ANALYTICS_ENABLED: "false"
      GF_ANALYTICS_REPORTING_ENABLED: "false"
      GF_ANALYTICS_CHECK_FOR_UPDATES: "false"
      GF_ANALYTICS_CHECK_FOR_PLUGIN_UPDATES: "false"
      GF_SNAPSHOTS_ENABLED: "false"
      GF_DASHBOARD_CLEANUP_INTERVAL: 1h
      GF_DASHBOARD_CLEANUP_BATCH_SIZE: 5
      GF_UNIFIED_ALERTING_ENABLED: "false"
      GF_NEW_NEWS_FEED_ENABLED: "false"
    volumes:
      - type: volume
        source: grafana
        target: /var/lib/grafana
    networks:
      - default
      - proxy
    deploy:
      labels:
        traefik.enable: "true"
        traefik.docker.network: proxy
        traefik.http.routers.grafana.entrypoints: websecure
        traefik.http.routers.grafana.rule: Host(`grafana.raspi.internal`)
        traefik.http.services.grafana.loadbalancer.server.port: "3000"

  fluentbit:
    image: fluent/fluent-bit:4.0
    command:
      - --config=/fluent-bit/etc/fluent-bit.yaml
    ports:
      - "514:5140/udp"
    environment:
      PGHOST: timescaledb
      PGDATABASE: fluentbit
      PGUSER: fluentbit
      PGPASSFILE: /run/secrets/.pgpass
    configs:
      - source: fluentbit
        target: /fluent-bit/etc/fluent-bit.yaml
    secrets:
      - source: pgpass
        target: .pgpass
        mode: 0o600
    networks:
      - default
      - proxy
    deploy:
      labels:
        traefik.enable: "true"
        traefik.docker.network: proxy
        traefik.http.routers.fluentbit.entrypoints: websecure
        traefik.http.routers.fluentbit.rule: Host(`fluentbit.raspi.internal`)
        traefik.http.services.fluentbit.loadbalancer.server.port: "2020"

  timescaledb:
    image: timescale/timescaledb:latest-pg17
    environment:
      PGUSER: fluentbit
      POSTGRES_DB: fluentbit
      POSTGRES_USER: fluentbit
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres-passwd
    volumes:
      - type: volume
        source: timescaledb
        target: /var/lib/postgresql/data
    secrets:
      - source: postgres_passwd
        target: postgres-passwd

configs:
  prometheus:
    file: ./prometheus/prometheus.yml
  fluentbit:
    file: ./fluent-bit/fluent-bit.yaml

secrets:
  pgpass:
    file: ./timescaledb/.pgpass
  postgres_passwd:
    file: ./timescaledb/postgres-passwd

volumes:
  grafana:
    driver: local
  prometheus:
    driver: local
  timescaledb:
    driver: local

networks:
  proxy:
    external: true
